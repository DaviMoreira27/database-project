from fastapi import FastAPI
from pydantic import BaseModel
import oracledb
import os

user = os.getenv('DB_USER')
password = os.getenv('DB_PASSWORD')
host = os.getenv('DB_HOST')

if (user is None or password is None or host is None):
    os._exit(os.EX_IOERR)

connection = oracledb.connect(user=user, password=password, dsn=host)
cursor = connection.cursor()

cursor.execute("""
    BEGIN
        EXECUTE IMMEDIATE 'CREATE TABLE test_table (
            id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR2(50)
        )';
    EXCEPTION
        WHEN OTHERS THEN
            IF SQLCODE != -955 THEN
                RAISE;
            END IF;
    END;
""")

connection.commit()

class Item(BaseModel):
    name: str

app = FastAPI()

@app.post("/items/")
def create_item(item: Item):
    cursor.execute("INSERT INTO test_table (name) VALUES (:name)", [item.name])
    connection.commit()
    return {"message": "Item inserted", "name": item.name}

@app.get("/items/")
def list_items():
    cursor.execute("SELECT id, name FROM test_table")
    rows = cursor.fetchall()
    return [{"id": r[0], "name": r[1]} for r in rows]
